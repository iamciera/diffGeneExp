next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
png(file = paste(GENE, "plots.pdf", sep= ""))
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
}
dev.off()
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
pdf(file = paste(GENE, "plots.pdf", sep= ""))
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
}
dev.off()
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
pdf(file = paste(GENE, "plots.pdf", sep= ""))
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
dev.off()
}
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"Plot1.png")
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"Plot2.png")
}
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"Plot1.png"))
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"Plot2.png"))
}
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"Plot1.pdf")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"Plot2.pdf")) #Print Plot
}
geneData
geneList
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
geneData$geneName <- grepl(GENE, geneList$Gene_name, ignore.case = T)
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"Plot1.pdf")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"Plot2.pdf")) #Print Plot
}
head(geneData)
geneData$geneName <- grepl(GENE, geneList$Gene_name, ignore.case = T)
bla <- grepl(GENE, geneList$Gene_name, ignore.case = T)
bla
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"Plot1.pdf")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"Plot2.pdf")) #Print Plot
}
geneData <- subset(countData, grepl(GENE, countData$gene))
geneData
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"/Volumes/Time Machine Backups/leafGenePlots/Plot1.pdf")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"/Volumes/Time Machine Backups/leafGenePlots/Plot2.pdf")) #Print Plot
}
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"Volumes/Time Machine Backups/leafGenePlots/Plot1.pdf")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"Volumes/Time Machine Backups/leafGenePlots/Plot2.pdf")) #Print Plot
}
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"../../../../../../../Volumes/Time Machine Backups/leafGenePlots/Plot1.pdf")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"../../../../../../../Volumes/Time Machine Backups/leafGenePlots//Plot2.pdf")) #Print Plot
}
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"../../../../../../../Volumes/TimeMachineBackups/leafGenePlots/Plot1.pdf")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"../../../../../../../Volumes/TimeMachineBackups/leafGenePlots//Plot2.pdf")) #Print Plot
}
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste(GENE,"../../../../../../../Volumes/TimeMachineBackups/leafGenePlots/Plot1.pdf", sep= "")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste(GENE,"../../../../../../../Volumes/TimeMachineBackups/leafGenePlots//Plot2.pdf", sep = "")) #Print Plot
}
for(GENE in genesOfInterest[11:20]) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste("../../../../../../../Volumes/TimeMachineBackups/leafGenePlots/", GENE, "Plot1.pdf", sep= "")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste("../../../../../../../Volumes/TimeMachineBackups/leafGenePlots/", GENE, "Plot2.pdf", sep= ""))
}
for(GENE in genesOfInterest) {
if(length(grep(GENE, countData$gene)) < 1){
next;
}
geneData <- subset(countData, grepl(GENE, countData$gene))
sumGraph <- ddply(geneData, c("type", "genotype"), summarise,
N    = length(count),
mean = mean(count),
sd   = sd(count),
se   = sd / sqrt(N) )
#Plot 1
plot1 <- ggplot(sumGraph, aes(type, mean, fill = genotype)) +
geom_bar(stat = "identity", position = "dodge")  +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, vjust=1)) +
ggtitle(GENE)
ggsave(filename= paste("../../../../../../../Volumes/TimeMachineBackups/leafGenePlots/", GENE, "Plot1.pdf", sep= "")) #Print Plot
#Plot 2
plot2  <- ggplot(sumGraph, aes(genotype, mean, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=0, vjust=1)) +
ggtitle(GENE)
print(cbind(plot1, plot2))
ggsave(filename= paste("../../../../../../../Volumes/TimeMachineBackups/leafGenePlots/", GENE, "Plot2.pdf", sep= ""))
}
qry <- IRanges(start=c(1, 26, 19, 11, 21, 7), end=c(16, 30, 19, 15, 24, 8), names=letters[1:6])
library(IRanges)
qry <- IRanges(start=c(1, 26, 19, 11, 21, 7), end=c(16, 30, 19, 15, 24, 8), names=letters[1:6])
qry
sbj <- IRanges(start=c(1, 19, 10), end=c(5, 29, 16), names=letters[24:26])
sbj
hts <- findOverlaps(qry, sbj)
hts
names(qry)[queryHits(hts)]
findOverlaps(qry, sbj, select="first")
qry <- IRanges(start=6, end=13, name='query')
sbj <- IRanges(start=c(2, 4, 18, 19), end=c(4, 5, 21, 24), names=1:4)
nearest(qry, sbj)
qry
sbj
qry2 <- IRanges(start=c(6, 7), width=3)
nearest(qry2, sbj)
qry <- IRanges(sample(seq_len(1000), 5), width=10)
sbj <- IRanges(sample(seq_len(1000), 5), width=10)
qry
sbj
x <- as.integer(c(4, 4, 4, 3, 3, 2, 1, 1, 1, 1, 1, 0, 0, 0,
0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4))
xrle <- Rle(x)
xrle
xrle <- Rle(x)
